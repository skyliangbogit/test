<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36" version="27.2.0">
  <diagram name="第 1 页" id="6vVsbzrkcE_T9RhkV8ur">
    <mxGraphModel dx="2066" dy="1041" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="AMmAMopAfPiwC2GXyfaX-1" value="主要工作内容&lt;div&gt;1.死机重启问题&lt;/div&gt;&lt;div&gt;上层服务造成的重启&lt;/div&gt;&lt;div&gt;kernel panic&lt;/div&gt;&lt;div&gt;watchdog:&amp;nbsp;&lt;/div&gt;&lt;div&gt;（1）记录每个核的最后喂狗时间&lt;/div&gt;&lt;div&gt;（2）hrtimer 会检测&lt;/div&gt;&lt;div&gt;kernel watchdog（kthread 实现，一个核心卡住，就会dump，并smp call 其他core dump backtrace&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;HW watchdog （如果无法smpcall 通知 卡住的）&lt;/div&gt;&lt;div&gt;scheduel and irq enter 的时候，记录 trace。&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;这样就可以知道最后cpu core&lt;/span&gt;&lt;/div&gt;&lt;div&gt;卡死的点了&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2.Memory leak 分析&lt;/div&gt;&lt;div&gt;slab memory leak 分析 slab trace&lt;/div&gt;&lt;div&gt;page owner&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3.Thermal/power&lt;/div&gt;&lt;div&gt;porting 4 cooling device:cpu freq, cpu core, gpr freq, wifi&lt;/div&gt;&lt;div&gt;NTC 模拟 3 个 virtual sensor, thermal_zone :bottom, side, top&lt;/div&gt;&lt;div&gt;uevent 通知thermald&lt;/div&gt;&lt;div&gt;i2c driver&lt;/div&gt;&lt;div&gt;ina2xx&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;4.low power detect and brown out&lt;/div&gt;&lt;div&gt;Brown out sensor driver -- 根据cnt提供的data sheet 写driver。&lt;/div&gt;&lt;div&gt;开机判断是否发生过brown out，提供sysfs 节点，清楚状态，读取adc，state&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;low power detect&lt;/div&gt;&lt;div&gt;在bootloader&lt;/div&gt;&lt;div&gt;adc vbus without pwm load&lt;/div&gt;&lt;div&gt;pwm loading&lt;/div&gt;&lt;div&gt;adc vbus&lt;/div&gt;&lt;div&gt;计算阻值，显示low power logo，传递到kernel， reserved-memory&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;5.New LCR design&lt;/div&gt;&lt;div&gt;(1)HW platform independent&lt;/div&gt;&lt;div&gt;use reserved-memory instead of nonrst2 reg&lt;/div&gt;&lt;div&gt;(2)reboot notifier, kernel panic notifier , die notifier&lt;/div&gt;&lt;div&gt;(3)Add extra caller info:&amp;nbsp; called by , uptime,boot count, cold boot count&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;uboot 和kernel reboot前要flush cache&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;6.USB role switch&lt;/div&gt;&lt;div&gt;根据charge type，&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;7.BOOT&lt;/div&gt;&lt;div&gt;AB OTA ，BCB的逻辑&lt;/div&gt;&lt;div&gt;idme migration, ab boot part change and sync&lt;/div&gt;&lt;div&gt;idme 生成/proc/idme&lt;/div&gt;&lt;div&gt;boot argus 传递，从 lk 定义reserved-memory 一直通过dtb 传递到 kernel&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;8.Emmc health report&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;9.fireboot 功能&lt;/div&gt;&lt;div&gt;usb role switch,&lt;/div&gt;&lt;div&gt;ota , factory reset, image invalidate, exceed max_retry disable fireboot&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;10.Memory allocation slow&lt;/div&gt;&lt;div&gt;Ftrace 分析memory&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;内存&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;分配慢的问题。一直running 状态。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;perfetto linux.sys_stats linux.process_stats ftrace_events:vm_scan&lt;/span&gt;&lt;/div&gt;&lt;div&gt;traditional LRU lists: file_active, file_inactive,&lt;font style=&quot;color: rgb(255, 51, 51);&quot;&gt; anon_active, anon_inactive, Unevictable&lt;/font&gt;&lt;/div&gt;&lt;div&gt;PG_referenced PG_active,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="60" y="70" width="720" height="1050" as="geometry" />
        </mxCell>
        <mxCell id="AMmAMopAfPiwC2GXyfaX-3" value="Memtotal = DMA-BUF used + Slab + KernelStack + PageTables + Percpu + Active + Inactive&#xa;Carvout= Reserved + Kernel_image&#xa;kernel code:    11146K    # 内核代码段&#xa;rwdata:          1669K    # 可读写数据段&#xa;rodata:          3104K    # 只读数据段&#xa;init:            1024K    # 初始化代码/数据(后续可释放)&#xa;bss:              727K    # 未初始化数据段" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="840" y="90" width="530" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
